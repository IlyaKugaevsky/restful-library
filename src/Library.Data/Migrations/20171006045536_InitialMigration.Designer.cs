// <auto-generated />
using System;
using Library.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace Library.Data.Migrations
{

    [DbContext(typeof(LibraryContext))]

    [Migration("20171006045536_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Library.Data.Entities.Author", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTimeOffset>("DateOfBirth");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50);

                b.Property<string>("Genre")
                    .IsRequired()
                    .HasMaxLength(50);

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50);

                b.HasKey("Id");

                b.ToTable("Authors");
            });

            modelBuilder.Entity("Library.Data.Entities.Book", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<Guid>("AuthorId");

                b.Property<string>("Description")
                    .HasMaxLength(500);

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100);

                b.HasKey("Id");

                b.HasIndex("AuthorId");

                b.ToTable("Books");
            });

            modelBuilder.Entity("Library.Data.Entities.Book", b =>
            {
                b.HasOne("Library.Data.Entities.Author", "Author")
                    .WithMany("Books")
                    .HasForeignKey("AuthorId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}